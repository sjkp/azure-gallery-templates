{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStorageAccountName": {
      "type": "String"
    },
    "newDomainName": {
      "type": "String"
    },
    "newVirtualNetworkName": {
      "type": "String"
    },
    "vnetAddressSpace": {
      "type": "String"
    },
    "hostName": {
      "type": "String"
    },
    "userName": {
      "type": "String"
    },
    "password": {
      "type": "SecureString"
    },
    "location": {
      "type": "String"
    },
    "hardwareSize": {
      "type": "String"
    }
  },
  "resources": [
    {
      "type": "Microsoft.ClassicStorage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "apiVersion": "2014-06-01",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "Standard-GRS"
      }
    },
    {
      "type": "Microsoft.ClassicCompute/domainNames",
      "name": "[parameters('newDomainName')]",
      "apiVersion": "2014-06-01",
      "location": "[parameters('location')]",
      "properties": {}
    },
    {
      "type": "Microsoft.ClassicNetwork/virtualNetworks",
      "name": "[parameters('newVirtualNetworkName')]",
      "apiVersion": "2014-06-01",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressSpace')]"
          ]
        },
        "subnets": [
          {
            "name": "Subnet-1",
            "addressPrefix": "[parameters('vnetAddressSpace')]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.ClassicCompute/virtualMachines",
      "name": "[parameters('hostName')]",
      "apiVersion": "2014-06-01",
      "location": "[parameters('location')]",
      "properties": {
        "domainName": {
          "id": "[concat(resourceGroup().id, '/providers/Microsoft.ClassicCompute/domainNames/', parameters('newDomainName'))]"
        },
        "networkProfile": {
          "virtualNetwork": {
            "id": "[concat(resourceGroup().id, '/providers/Microsoft.ClassicNetwork/virtualNetworks/', parameters('newVirtualNetworkName'))]",
            "subnetNames": [
              "Subnet-1"
            ]
          },
          "inputEndpoints": [
            {
              "enableDirectServerReturn": "False",
              "endpointName": "SSH",
              "privatePort": 22,
              "publicPort": null,
              "protocol": "tcp"
            }
          ]
        },
        "hardwareProfile": {
          "size": "[parameters('hardwareSize')]",
          "platformGuestAgent": "true"
        },
        "operatingSystemProfile": {
          "computerName": "[parameters('hostName')]",
          "adminUserName": "[parameters('userName')]",
          "adminPassword": "[parameters('password')]",
          "linuxOperatingSystemProfile": {
            "disableSshPasswordAuthentication": "false"
          }
        },
        "storageProfile": {
          "operatingSystemDisk": {
            "diskName": "[concat(parameters('newDomainName'), '-', parameters('hostName'), '-osdisk')]",
            "vhdUri": "[concat(reference(concat('Microsoft.ClassicStorage/storageAccounts/', parameters('newStorageAccountName'))).endpoints[0], 'vhds/', parameters('newDomainName'), '-', parameters('hostName'), '-osdisk.vhd')]",
            "caching": "ReadWrite",
            "sourceImageName": "03f55de797f546a1b29d1b8d66be687a__CoreCLR-x64-Beta5-Linux-PartsUnlimited-Demo-App-201504.29"
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.ClassicCompute/domainNames/', parameters('newDomainName'))]",
        "[concat('Microsoft.ClassicNetwork/virtualNetworks/', parameters('newVirtualNetworkName'))]"
      ]
    }
  ]
}